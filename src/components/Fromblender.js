/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useBox } from '@react-three/cannon'
import { useFrame } from '@react-three/fiber'
export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/fromblender.glb')
  const [ref, api] = useBox(() => ({ mass: 1}))
  // useFrame((state, delta) => {
  //   // set velocity to slower 
  //   api.body.velocity.set(0, 0, 0)
  // })
  return (
    <group 
      onClick={() => {
        api.velocity.set((Math.random() - 0.5) * 8, (Math.random()) * 8 , 0)
        // add rotation
        api.angularVelocity.set((Math.random() - 0.5) * 4, (Math.random() - 0.5) * 4, (Math.random() - 0.5) * 4)

      }}
      ref={group} 
      {...props} 
      dispose={null} 
      position={[0, 2, 0]}
    >
      <mesh ref={ref} geometry={nodes.FBHead.geometry} material={materials.FBHead_preview_mat} />
    </group>
  )
}

useGLTF.preload('/fromblender.glb')
