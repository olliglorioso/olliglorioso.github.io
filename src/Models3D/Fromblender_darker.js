/* eslint-disable react/prop-types */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { useCylinder } from "@react-three/cannon"
import { audios } from "../assets/audios.js"

export default function Model({ ...props }) {
    const { random, floor } = Math
    let { nonono, dreadful } = audios
    const group = useRef()
    const { nodes, materials } = useGLTF("/fromblender_darker.glb")
    const [ref, api] = useCylinder(() => ({ mass: 1 }))

    return (
        <group 
            ref={group} 
            {...props} 
            dispose={null} 
            position={[0, 2, 0]}
            scale={[1, 1, 1]}
      
            onClick={() => {
                api.velocity.set((random() - 0.5) * 8, (random()) * 8 , 0)
                api.angularVelocity.set((random() - 0.5) * 10, (random() - 0.5) * 10, (random() - 0.5) * 10)
                const randomNum = floor(random() * 4)
                if (randomNum === 0) {
                    nonono.play()
                } else if (randomNum === 1) {
                    dreadful.play()
                }
            }}
        >
            <mesh ref={ref} geometry={nodes.FBHead.geometry} material={materials.FBHead_preview_mat} />
        </group>
    )
}

useGLTF.preload("/fromblender.glb")
